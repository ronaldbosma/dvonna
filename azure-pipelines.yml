trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - testdata/*

variables:
  artifactName: 'dvonna.Site'

stages:

- stage: 'Build'
  variables:
    buildConfiguration: 'Release'

  jobs:
  - job:
    pool:
      vmImage: 'windows-latest'

    workspace:
      clean: all

    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk'
      inputs:
        packageType: sdk
        version: 3.1.x
    
    - task: DotNetCoreCLI@2
      displayName: 'NuGet Restore'
      inputs:
        command: restore
        projects: '**/*.csproj'
    
    - task: DotNetCoreCLI@2
      displayName: 'Build Solution'
      inputs:
        command: build
        projects: 'src/dvonna.sln'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'Run Tests'
      enabled: false
      inputs:
        command: test
        projects: '**/*[Tt]ests/*.csproj'
        arguments: '--configuration $(buildConfiguration) --logger trx /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput="$(Build.SourcesDirectory)/TestResults/Coverage"'
    
    - task: DotNetCoreCLI@2
      displayName: 'Publish Blazor App'
      inputs:
        command: publish
        projects: 'src/dvonna.Site/*.csproj'
        arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(artifactName)'
        publishWebProjects: true
        zipAfterPublish: true

    - task: CopyFiles@2
      displayName: 'Copy Bicep files'
      inputs:
        sourceFolder: '.bicep'
        contents: '**'
        targetFolder: '$(Build.ArtifactStagingDirectory)/$(artifactName)/.bicep'

    - publish: '$(Build.ArtifactStagingDirectory)/$(artifactName)'
      displayName: 'Publish Artifact'
      artifact: '$(artifactName)'



- stage: 'Deploy'
  variables:
    siteName: 'dvonna-test'
    location: 'westeurope'
    environment: 'test'

  jobs:
  - job:
    pool:
      vmImage: 'ubuntu-latest'

    steps:
      - checkout: none  # no need to checkout any code because we only need the artifact
      
      - download: current
        artifact: '$(artifactName)'

      - task: AzureCLI@2
        displayName: 'Create Azure resources for $(siteName)'
        inputs:
          azureSubscription: 'Azure Visual Studio Enterprise'
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            echo "siteName: $(siteName)"
            echo "location: $(location)"

            az deployment sub create \
              --location $(location) \
              --template-file '$(Pipeline.Workspace)/$(artifactName)/.bicep/dvonna.bicep' \
              --parameters siteName='$(siteName)' location='$(location)' environment='$(environment)'

      - task: AzureRmWebAppDeployment@4
        displayName: 'Deploy Blazor App to $(siteName)'
        inputs:
          ConnectionType: 'AzureRM'
          azureSubscription: 'Azure Visual Studio Enterprise'
          appType: 'webApp'
          WebAppName: '$(siteName)'
          packageForLinux: '$(Pipeline.Workspace)/$(artifactName)/*.zip'